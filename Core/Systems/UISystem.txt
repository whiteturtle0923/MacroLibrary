using System.Collections.Generic;
using MacroLibrary.Content.UI;
using Microsoft.Xna.Framework;
using Terraria;
using Terraria.ModLoader;
using Terraria.UI;

namespace MacroLibrary.Core.Systems
{
    public class UISystem: ModSystem
    {
        internal UserInterface MacroInterface;
        internal MacroSaveUI SaveUI;
        internal bool UIShown;

        private GameTime _lastUpdateUiGameTime;
        public override void UpdateUI(GameTime gameTime)
        {
            _lastUpdateUiGameTime = gameTime;
            if (MacroInterface?.CurrentState != null) 
            {
                MacroInterface.Update(gameTime);
            }
        }

        public override void ModifyInterfaceLayers(List<GameInterfaceLayer> layers) {
            int mouseTextIndex = layers.FindIndex(layer => layer.Name.Equals("Vanilla: Mouse Text"));
            if (mouseTextIndex != -1) {
                layers.Insert(mouseTextIndex, new LegacyGameInterfaceLayer(
                    "MacroLibrary: MacroInterface",
                    delegate
                    {
                        if ( _lastUpdateUiGameTime != null && MacroInterface?.CurrentState != null) {
                            MacroInterface.Draw(Main.spriteBatch, _lastUpdateUiGameTime);
                        }
                        return true;
                    },
                    InterfaceScaleType.UI));
            }
        }
        // cant be bothered to fix ui crashing on game load
        /*
        public override void Load()
        {
            if (!Main.dedServ)
            {
                MacroInterface = new UserInterface();

                SaveUI = new MacroSaveUI();
                SaveUI.Activate();

                UIShown = false;
            }
        }
        public override void Unload()
        {
            SaveUI = null;
        }
        */
        internal void ToggleUI()
        {
            UIShown = !UIShown;
            if (UIShown)
                MacroInterface.SetState(SaveUI);
            else
                MacroInterface.SetState(null);
        }
    }
}